name: Update Yuusei Filter

on:
    push:
        paths:
            - 'Yuusei.txt'
    schedule:
        - cron: '0 0,12 * * *'
    workflow_dispatch:
        inputs:
            force_update:
                description: 'C·∫≠p nh·∫≠t b·∫Øt bu·ªôc ngay c·∫£ khi kh√¥ng c√≥ thay ƒë·ªïi'
                required: false
                type: boolean
                default: false

env:
    FILTER_FILE: Yuusei.txt
    MIN_RULES: 10
    TIMEZONE: 'Asia/Ho_Chi_Minh'
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
    update-filter:
        runs-on: ubuntu-latest
        permissions:
            contents: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup environment
              id: setup
              run: |
                  sudo ln -sf /usr/share/zoneinfo/${{ env.TIMEZONE }} /etc/localtime
                  {
                    echo "DATE=$(date +'%d-%m-%Y')"
                    echo "TIME=$(date +'%H:%M:%S')"
                    echo "YEAR=$(date +'%Y')"
                    echo "REPO_NAME=${GITHUB_REPOSITORY#*/}"
                    echo "AUTHOR_NAME=${GITHUB_REPOSITORY%/*}"
                    echo "FULL_VERSION=$(date +'%Y.%m.%d')"
                  } >> $GITHUB_ENV

            - name: Get contributors info
              id: contributors
              run: |
                  contributors=$(gh api repos/${{ github.repository }}/contributors --jq '[.[] | {login: .login, avatar_url: .avatar_url, contributions: .contributions, html_url: .html_url}]')
                  echo "CONTRIBUTORS=$contributors" >> $GITHUB_OUTPUT
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Validate filter file
              id: validate
              run: |
                  log_error() {
                    echo "::error::$1"
                    exit 1
                  }

                  [ -f "${{ env.FILTER_FILE }}" ] || log_error "Kh√¥ng t√¨m th·∫•y file filter!"
                  FILE_SIZE=$(stat -f%z "${{ env.FILTER_FILE }}" 2>/dev/null || stat -c%s "${{ env.FILTER_FILE }}")
                  [ "$FILE_SIZE" -ge 100 ] || log_error "File filter qu√° nh·ªè!"

                  required_headers=("! Title:" "! Version:" "! Last modified:" "! Homepage:" "! License:")
                  for header in "${required_headers[@]}"; do
                    grep -q "^$header" "${{ env.FILTER_FILE }}" || log_error "Thi·∫øu header b·∫Øt bu·ªôc: $header"
                  done

                  RULE_COUNT=$(grep -v "^!" "${{ env.FILTER_FILE }}" | wc -l)
                  [ "$RULE_COUNT" -ge "${{ env.MIN_RULES }}" ] || log_error "Kh√¥ng ƒë·ªß rules (t·ªëi thi·ªÉu: ${{ env.MIN_RULES }})!"
                  echo "RULE_COUNT=$RULE_COUNT" >> $GITHUB_ENV
                  
                  # Basic syntax checks (feel free to add more)
                  SYNTAX_ERRORS=$(grep -n "^[ \t]*[^!#@|]" "${{ env.FILTER_FILE }}" || true)
                  if [ -n "$SYNTAX_ERRORS" ]; then
                      echo "::warning::Ph√°t hi·ªán c√°c d√≤ng kh√¥ng h·ª£p l·ªá (kh√¥ng b·∫Øt ƒë·∫ßu b·∫±ng !, #, @ ho·∫∑c | ):"
                      echo "$SYNTAX_ERRORS"
                  fi
                  
                  SYNTAX_ERRORS=$(grep -n "[^a-zA-Z0-9.*?^$@#|=/,&_-]" "${{ env.FILTER_FILE }}" || true)
                  if [ -n "$SYNTAX_ERRORS" ]; then
                    echo "::warning::Ph√°t hi·ªán l·ªói c√∫ ph√°p ti·ªÅm ·∫©n:"
                    echo "$SYNTAX_ERRORS"
                  fi

            - name: Update filter metadata
              id: update
              run: |
                  temp_file=$(mktemp)
                  cp "${{ env.FILTER_FILE }}" "${FILTER_FILE}.bak"

                  sed -E "s/^! Version:.*/! Version: ${{ env.FULL_VERSION }}/;\
                         s/^! Last modified:.*/! Last modified: ${{ env.DATE }} ${{ env.TIME }}/;\
                         s/^! Updated by:.*/! Updated by: GitHub Actions/" \
                  "${{ env.FILTER_FILE }}" > "$temp_file"

                  CHECKSUM=$(sha256sum "$temp_file" | cut -d' ' -f1)
                  sed "s/^! Checksum:.*/! Checksum: $CHECKSUM/" "$temp_file" > "${{ env.FILTER_FILE }}"

                  {
                    echo "NETWORK_RULES=$(grep -c "^||" "${{ env.FILTER_FILE }}" || true)"
                    echo "COSMETIC_RULES=$(grep -c "##" "${{ env.FILTER_FILE }}" || true)"
                    echo "WHITELIST_RULES=$(grep -c "^@@" "${{ env.FILTER_FILE }}" || true)"
                  } >> $GITHUB_ENV

            - name: Check if filter changed
              id: check-changed
              run: |
                  if [[ "${{ github.event.inputs.force_update }}" == "true" ]] || ! git diff --quiet "${{ env.FILTER_FILE }}"; then
                      echo "CHANGED=true" >> $GITHUB_ENV
                  else
                      echo "CHANGED=false" >> $GITHUB_ENV
                  fi

            - name: Generate README.md
              if: env.CHANGED == 'true'
              run: |
                  generate_badge() {
                    local label=$1 message=$2 color=$3
                    echo "https://img.shields.io/badge/$label-$message-$color?style=flat-square"
                  }

                  VERSION_BADGE=$(generate_badge "Version" "${{ env.FULL_VERSION }}" "blue")
                  RULES_BADGE=$(generate_badge "Rules" "${{ env.RULE_COUNT }}" "brightgreen")
                  UPDATED_BADGE=$(generate_badge "Updated" "${{ env.DATE }}" "success")
                  
                  contributors_html=""
                  if [[ "${{ steps.contributors.outputs.CONTRIBUTORS }}" != "null" ]]; then
                     
                     contributors_data=$(echo "${{ steps.contributors.outputs.CONTRIBUTORS }}" | jq -c '.[]')
                     while IFS= read -r contributor_json; do
                       contributor_data=$(echo "$contributor_json" | jq -r '
                            "<div style=\"display: flex; align-items: center; margin-bottom: 10px;\">" +
                                "<img src=\"" + .avatar_url + "\" alt=\"" + .login + "\" style=\"width: 40px; height: 40px; border-radius: 50%; margin-right: 10px;\">" +
                                "<div>" +
                                    "<a href=\"" + .html_url + "\" style=\"font-weight: bold; text-decoration: none;\">" + .login + "</a><br>" +
                                    "<span> ƒë√≥ng g√≥p: " + .contributions + "</span>" +
                                "</div>" +
                            "</div>"
                        ')
                       contributors_html+="$contributor_data"
                     done <<< "$contributors_data"
                   else
                     contributors_html="Kh√¥ng c√≥ th√¥ng tin ng∆∞·ªùi ƒë√≥ng g√≥p."
                   fi


                  cat > README.md << 'EOF'
                  # Yuusei Filter List - B·ªô l·ªçc qu·∫£ng c√°o Vi·ªát Nam

                  <div align="center">
                    <img src=".github/assets/logo.png" alt="Yuusei Filter Logo" width="150" />
                  </div>

                  <p align="center">
                      [![Version]($VERSION_BADGE)](https://github.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }})
                      [![Rules]($RULES_BADGE)](https://github.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }})
                      [![Updated]($UPDATED_BADGE)](https://github.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }})
                  </p>

                  **Yuusei Filter List** l√† m·ªôt b·ªô l·ªçc qu·∫£ng c√°o ƒë∆∞·ª£c thi·∫øt k·∫ø ri√™ng cho ng∆∞·ªùi d√πng Vi·ªát Nam, gi√∫p b·∫°n ch·∫∑n c√°c qu·∫£ng c√°o phi·ªÅn ph·ª©c v√† c·∫£i thi·ªán tr·∫£i nghi·ªám duy·ªát web. V·ªõi c√°c rule ƒë∆∞·ª£c c·∫≠p nh·∫≠t th∆∞·ªùng xuy√™n, b·∫°n c√≥ th·ªÉ y√™n t√¢m t·∫≠n h∆∞·ªüng m·ªôt m√¥i tr∆∞·ªùng tr·ª±c tuy·∫øn s·∫°ch s·∫Ω v√† an to√†n.

                  ## üöÄ C√†i ƒë·∫∑t nhanh
                  
                  ### uBlock Origin
                  
                  [<img src="https://img.shields.io/badge/Install%20uBlock%20Origin-008000?style=for-the-badge&logo=ublockorigin" height="24" />](https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/Yuusei.txt)

                  ### AdGuard
                  
                  [<img src="https://img.shields.io/badge/Install%20AdGuard-34B0EB?style=for-the-badge&logo=adguard" height="24" />](https://subscribe.adblockplus.org/?location=https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/Yuusei.txt)

                  
                  Ho·∫∑c b·∫°n c√≥ th·ªÉ th√™m th·ªß c√¥ng b·∫±ng link sau:
                  
                  \`\`\`
                  https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/Yuusei.txt
                  \`\`\`
                  
                  ## üìä Th·ªëng k√™ b·ªô l·ªçc
                  
                  |   |    |
                  | --------|--------|
                  | T·ªïng s·ªë rules | <span style="font-weight: bold;">${{ env.RULE_COUNT }}</span> |
                  | Rules m·∫°ng | <span style="font-weight: bold;">${{ env.NETWORK_RULES }}</span> |
                  | Rules giao di·ªán | <span style="font-weight: bold;">${{ env.COSMETIC_RULES }}</span> |
                  | Whitelist rules | <span style="font-weight: bold;">${{ env.WHITELIST_RULES }}</span> |

                  ## ‚ú® Ng∆∞·ªùi ƒë√≥ng g√≥p
                  
                  $contributors_html

                  ## ‚ùì C√¢u h·ªèi th∆∞·ªùng g·∫∑p (FAQ)

                  **B·ªô l·ªçc n√†y ch·∫∑n nh·ªØng lo·∫°i qu·∫£ng c√°o n√†o?**

                  B·ªô l·ªçc n√†y ch·∫∑n h·∫ßu h·∫øt c√°c qu·∫£ng c√°o ph·ªï bi·∫øn tr√™n c√°c trang web Vi·ªát Nam, bao g·ªìm qu·∫£ng c√°o banner, pop-up, video v√† c√°c qu·∫£ng c√°o theo d√µi.

                  **T√¥i n√™n s·ª≠ d·ª•ng b·ªô l·ªçc n√†y v·ªõi tr√¨nh ch·∫∑n qu·∫£ng c√°o n√†o?**

                  B·ªô l·ªçc n√†y ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ ho·∫°t ƒë·ªông t·ªët v·ªõi uBlock Origin v√† AdGuard, nh∆∞ng c≈©ng c√≥ th·ªÉ ho·∫°t ƒë·ªông t·ªët v·ªõi c√°c tr√¨nh ch·∫∑n qu·∫£ng c√°o kh√°c h·ªó tr·ª£ ƒë·ªãnh d·∫°ng b·ªô l·ªçc t∆∞∆°ng t·ª±.

                  **L√†m th·∫ø n√†o ƒë·ªÉ b√°o c√°o m·ªôt l·ªói ho·∫∑c m·ªôt qu·∫£ng c√°o kh√¥ng b·ªã ch·∫∑n?**

                  B·∫°n c√≥ th·ªÉ t·∫°o m·ªôt issue tr√™n GitHub repository n√†y ho·∫∑c li√™n h·ªá tr·ª±c ti·∫øp v·ªõi ng∆∞·ªùi ph√°t tri·ªÉn.

                  ## üïí C·∫≠p nh·∫≠t m·ªõi nh·∫•t

                  \`\`\`
                  C·∫≠p nh·∫≠t l·∫ßn cu·ªëi: ${{ env.DATE }} ${{ env.TIME }}
                  \`\`\`

                  ## üîó Li√™n k·∫øt

                  [<img src="https://img.shields.io/badge/GitHub-181717?style=for-the-badge&logo=github&logoColor=white" height="24" />](https://github.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }})
                  
                  ## License
                  
                  This project is licensed under the [GPL License](LICENSE).

                  EOF

            - name: Commit changes
              if: env.CHANGED == 'true'
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
                  git add "${{ env.FILTER_FILE }}" README.md || true
                  git commit -m "üîÑ C·∫≠p nh·∫≠t t·ª± ƒë·ªông (Phi√™n b·∫£n: ${{ env.FULL_VERSION }})"
                  git pull origin main --rebase
                  git push
