name: Update Yuusei Filter

on:
    # Ch·ªâ ch·∫°y khi c√≥ commit thay ƒë·ªïi t·ªáp Yuusei.txt
    push:
        paths:
            - 'Yuusei.txt'
    # Cho ph√©p ch·∫°y th·ªß c√¥ng t·ª´ tab Actions tr√™n GitHub
    workflow_dispatch:
        inputs:
            force_update:
                description: 'C·∫≠p nh·∫≠t b·∫Øt bu·ªôc (b·ªè qua ki·ªÉm tra thay ƒë·ªïi)'
                required: false
                type: boolean
                default: false

env:
    FILTER_FILE: Yuusei.txt
    MIN_RULES: 10
    MIN_CONTRIBUTIONS: 5 
    TIMEZONE: 'Asia/Ho_Chi_Minh'
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    CACHE_VERSION: 'v1'

jobs:
    update-filter:
        runs-on: ubuntu-latest
        permissions:
            contents: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  # L·∫•y to√†n b·ªô l·ªãch s·ª≠ git ƒë·ªÉ t·∫°o changelog
                  fetch-depth: 0

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: ~/.cache
                  key: ${{ runner.os }}-${{ env.CACHE_VERSION }}-${{ hashFiles('**/Yuusei.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-${{ env.CACHE_VERSION }}-

            - name: Setup environment
              id: setup
              run: |
                  sudo ln -sf /usr/share/zoneinfo/${{ env.TIMEZONE }} /etc/localtime
                  {
                    echo "DATE=$(date +'%d-%m-%Y')"
                    echo "FULL_VERSION=$(date +'%Y.%m.%d.%H%M')"
                    echo "REPO_NAME=${GITHUB_REPOSITORY#*/}"
                    echo "AUTHOR_NAME=${GITHUB_REPOSITORY%/*}"
                  } >> $GITHUB_ENV

            - name: Get contributors info
              id: contributors
              run: |
                  contributors=$(gh api graphql -f query='
                    query($owner:String!, $name:String!) {
                      repository(owner:$owner, name:$name) {
                        collaborators(first:100, affiliation: DIRECT) {
                          nodes {
                            login
                            name
                            avatarUrl
                            url
                            contributionsCollection {
                              totalCommitContributions
                            }
                          }
                        }
                      }
                    }' -f owner="${GITHUB_REPOSITORY%/*}" -f name="${GITHUB_REPOSITORY#*/}" --jq '.data.repository.collaborators.nodes')

                  echo "CONTRIBUTORS<<EOF" >> $GITHUB_ENV
                  echo "$contributors" | jq -r --arg min_contributions "${{ env.MIN_CONTRIBUTIONS }}" '
                    .[] |
                    select(.contributionsCollection.totalCommitContributions >= ($min_contributions | tonumber)) |
                    "- <img src=\"\(.avatarUrl)&s=50\" width=\"50\" height=\"50\" style=\"border-radius: 50%; vertical-align: middle; margin-right: 5px;\" alt=\"\(.login)\"> **[\(.login)](\(.url))** - \(.contributionsCollection.totalCommitContributions) ƒë√≥ng g√≥p"
                  ' >> $GITHUB_ENV
                  echo "EOF" >> $GITHUB_ENV
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Validate and analyze filter file
              id: validate
              run: |
                  # D·ª´ng n·∫øu file kh√¥ng t·ªìn t·∫°i
                  if [ ! -f "${{ env.FILTER_FILE }}" ]; then
                    echo "::error::Kh√¥ng t√¨m th·∫•y file filter: ${{ env.FILTER_FILE }}"
                    exit 1
                  fi

                  # X√≥a d√≤ng tr·ªëng v√† chu·∫©n h√≥a kho·∫£ng tr·∫Øng tr∆∞·ªõc khi ph√¢n t√≠ch
                  sed -i '/^$/d' "${FILTER_FILE}"
                  sed -i '/^[^!]/s/[[:space:]]\+/ /g' "${FILTER_FILE}"
                  
                  # ƒê·∫øm s·ªë l∆∞·ª£ng quy t·∫Øc (kh√¥ng t√≠nh comment)
                  RULE_COUNT=$(grep -cvE '^!|^$' "${FILTER_FILE}")
                  if [ "$RULE_COUNT" -lt "${{ env.MIN_RULES }}" ]; then
                      echo "::error::Kh√¥ng ƒë·ªß rules (c√≥ $RULE_COUNT, y√™u c·∫ßu t·ªëi thi·ªÉu ${{ env.MIN_RULES }})!"
                      exit 1
                  fi

                  # Th·ªëng k√™ chi ti·∫øt
                  {
                    echo "RULE_COUNT=$RULE_COUNT"
                    echo "NETWORK_RULES=$(grep -cE "^\|\||^0\.0\.0\.0" "${FILTER_FILE}" || true)"
                    echo "COSMETIC_RULES=$(grep -cE "##|#\@#" "${FILTER_FILE}" || true)"
                    echo "WHITELIST_RULES=$(grep -c "^@@" "${FILTER_FILE}" || true)"
                    echo "COMMENT_COUNT=$(grep -c "^!" "${FILTER_FILE}" || true)"
                    echo "HOSTS_RULES=$(grep -c "^0\.0\.0\.0" "${FILTER_FILE}" || true)"
                    echo "UNIQUE_DOMAINS=$(grep -E "^\|\||^0\.0\.0\.0" "${FILTER_FILE}" | cut -d'|' -f3 | cut -d'^' -f1 | sed 's/www.//' | sort -u | wc -l || true)"
                  } >> $GITHUB_ENV

            - name: Update filter metadata
              id: update
              run: |
                  temp_file=$(mktemp)
                  
                  # C·∫≠p nh·∫≠t c√°c d√≤ng metadata
                  sed -E "
                    s/^! Version:.*/! Version: ${{ env.FULL_VERSION }}/;
                    s/^! Last modified:.*/! Last modified: ${{ env.DATE }}/;
                    s/^! Total rules:.*/! Total rules: ${{ env.RULE_COUNT }}/;
                    s/^! Unique domains:.*/! Unique domains: ${{ env.UNIQUE_DOMAINS }}/
                  " "${{ env.FILTER_FILE }}" > "$temp_file"

                  # T√≠nh checksum v√† c·∫≠p nh·∫≠t
                  CHECKSUM=$(sha256sum "$temp_file" | cut -d' ' -f1)
                  sed -i "s/^! Checksum:.*/! Checksum: $CHECKSUM/" "$temp_file"
                  
                  # So s√°nh file t·∫°m v·ªõi file g·ªëc ƒë·ªÉ xem c√≥ thay ƒë·ªïi n·ªôi dung kh√¥ng
                  if [[ "${{ github.event.inputs.force_update }}" == "true" ]] || ! cmp -s "$temp_file" "${{ env.FILTER_FILE }}"; then
                    echo "CHANGED=true" >> $GITHUB_ENV
                    echo "CHECKSUM=$CHECKSUM" >> $GITHUB_ENV
                    mv "$temp_file" "${{ env.FILTER_FILE }}"
                  else
                    echo "CHANGED=false" >> $GITHUB_ENV
                    rm "$temp_file"
                  fi
                  
            - name: Generate README
              if: env.CHANGED == 'true'
              run: |
                  # S·ª≠ d·ª•ng << 'EOF' ƒë·ªÉ ngƒÉn shell m·ªü r·ªông bi·∫øn, ƒë·ªÉ GitHub Actions t·ª± x·ª≠ l√Ω
                  cat > README.md << 'EOF'
                  <div align="center">
                    
                  # üõ°Ô∏è Yuusei Filter List
                  
                  **M·ªôt b·ªô l·ªçc qu·∫£ng c√°o hi·ªáu su·∫•t cao, ƒë∆∞·ª£c t·ªëi ∆∞u h√≥a cho ng∆∞·ªùi d√πng Vi·ªát Nam.**
                  
                  <p>
                    <a href="https://github.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/releases/latest"><img src="https://img.shields.io/github/v/release/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}?style=for-the-badge&label=Version&color=007bff" alt="Version"></a>
                    <a href="https://github.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/blob/main/Yuusei.txt"><img src="https://img.shields.io/badge/rules-${{ env.RULE_COUNT }}-brightgreen?style=for-the-badge" alt="Rules"></a>
                    <a href="LICENSE"><img src="https://img.shields.io/github/license/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}?style=for-the-badge&color=blueviolet" alt="License"></a>
                    <a href="https://github.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/commits/main"><img src="https://img.shields.io/github/last-commit/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}?style=for-the-badge&label=Updated" alt="Last commit"></a>
                  </p>
                  
                  </div>
                  
                  ## ‚ú® T√≠nh NƒÉng N·ªïi B·∫≠t
                  
                  - üáªüá≥ **T·ªëi ∆∞u cho ng∆∞·ªùi Vi·ªát**: T·∫≠p trung v√†o c√°c trang web ph·ªï bi·∫øn t·∫°i Vi·ªát Nam.
                  - üöÄ **Hi·ªáu su·∫•t cao**: C√°c quy t·∫Øc ƒë∆∞·ª£c vi·∫øt ƒë·ªÉ gi·∫£m thi·ªÉu ·∫£nh h∆∞·ªüng ƒë·∫øn t·ªëc ƒë·ªô duy·ªát web.
                  - üõ°Ô∏è **An to√†n & Minh b·∫°ch**: M√£ ngu·ªìn m·ªü 100%, kh√¥ng thu th·∫≠p d·ªØ li·ªáu ng∆∞·ªùi d√πng.
                  - üîÑ **Lu√¥n c·∫≠p nh·∫≠t**: T·ª± ƒë·ªông c·∫≠p nh·∫≠t khi c√≥ thay ƒë·ªïi m·ªõi trong b·ªô l·ªçc.
                  - üì± **ƒêa n·ªÅn t·∫£ng**: Ho·∫°t ƒë·ªông t·ªët tr√™n m·ªçi tr√¨nh duy·ªát v√† thi·∫øt b·ªã h·ªó tr·ª£ uBlock Origin, AdGuard.
                  
                  ## üöÄ C√†i ƒê·∫∑t
                  
                  Ch·ªâ c·∫ßn m·ªôt c√∫ nh·∫•p chu·ªôt ƒë·ªÉ th√™m b·ªô l·ªçc v√†o tr√¨nh ch·∫∑n qu·∫£ng c√°o c·ªßa b·∫°n.
                  
                  | Tr√¨nh ch·∫∑n qu·∫£ng c√°o | N√∫t c√†i ƒë·∫∑t nhanh |
                  | :--- | :--- |
                  | **uBlock Origin** | <a href="https://subscribe.adblockplus.org/?location=https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/Yuusei.txt&title=Yuusei%20Filter"><img src="https://img.shields.io/badge/Th√™m%20v√†o%20uBlock-blue?style=flat-square&logo=ublockorigin&logoColor=white" alt="Add to uBlock Origin"></a> |
                  | **AdGuard** | <a href="https://subscribe.adblockplus.org/?location=https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/Yuusei.txt&title=Yuusei%20Filter"><img src="https://img.shields.io/badge/Th√™m%20v√†o%20AdGuard-green?style=flat-square&logo=adguard&logoColor=white" alt="Add to AdGuard"></a> |
                  
                  <details>
                  <summary>H∆∞·ªõng d·∫´n c√†i ƒë·∫∑t th·ªß c√¥ng</summary>
                  
                  1. M·ªü c√†i ƒë·∫∑t c·ªßa tr√¨nh ch·∫∑n qu·∫£ng c√°o.
                  2. T√¨m ƒë·∫øn m·ª•c "Filter lists", "Custom filters" ho·∫∑c "B·ªô l·ªçc c·ªßa t√¥i".
                  3. Ch·ªçn "Add custom filter" ho·∫∑c "Th√™m b·ªô l·ªçc t·ª´ URL".
                  4. D√°n URL sau v√†o √¥ nh·∫≠p li·ªáu v√† nh·∫•n "Subscribe" ho·∫∑c "ƒêƒÉng k√Ω":
                  
                  ```
                  https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/Yuusei.txt
                  ```
                  
                  </details>
                  
                  ## üìä Th·ªëng K√™ B·ªô L·ªçc
                  
                  - **T·ªïng s·ªë quy t·∫Øc**: `${{ env.RULE_COUNT }}`
                  - **T√™n mi·ªÅn ƒë·ªôc nh·∫•t**: `${{ env.UNIQUE_DOMAINS }}`
                  - **C·∫≠p nh·∫≠t l·∫ßn cu·ªëi**: `${{ env.DATE }}`
                  - **Checksum (SHA256)**: `${{ env.CHECKSUM }}`
                  
                  <details>
                  <summary>Xem th·ªëng k√™ chi ti·∫øt v·ªÅ quy t·∫Øc</summary>
                  
                  | Lo·∫°i | S·ªë l∆∞·ª£ng | T·ª∑ l·ªá |
                  |:---|:---:|:---:|
                  | Rules M·∫°ng | ${{ env.NETWORK_RULES }} | `$(printf "%.0f" $(echo "${{ env.NETWORK_RULES }} * 100 / ${{ env.RULE_COUNT }}" | bc -l))`% |
                  | Rules Giao Di·ªán | ${{ env.COSMETIC_RULES }} | `$(printf "%.0f" $(echo "${{ env.COSMETIC_RULES }} * 100 / ${{ env.RULE_COUNT }}" | bc -l))`% |
                  | Rules Whitelist | ${{ env.WHITELIST_RULES }} | `$(printf "%.0f" $(echo "${{ env.WHITELIST_RULES }} * 100 / ${{ env.RULE_COUNT }}" | bc -l))`% |
                  | Rules Host File | ${{ env.HOSTS_RULES }} | `$(printf "%.0f" $(echo "${{ env.HOSTS_RULES }} * 100 / ${{ env.RULE_COUNT }}" | bc -l))`% |
                  
                  </details>
                  
                  ## üë• Ng∆∞·ªùi ƒê√≥ng G√≥p
                  
                  C·∫£m ∆°n t·∫•t c·∫£ nh·ªØng ng∆∞·ªùi tuy·ªát v·ªùi ƒë√£ ƒë√≥ng g√≥p cho d·ª± √°n n√†y!
                  
                  ${{ env.CONTRIBUTORS }}
                  
                  B·∫°n c≈©ng mu·ªën ƒë√≥ng g√≥p? H√£y t·∫°o m·ªôt [Pull Request](https://github.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/pulls) ho·∫∑c [Issue](https://github.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/issues) nh√©!
                  
                  ## üìù Changelog G·∫ßn ƒê√¢y
                  
                  ```
                  $(git log -10 --pretty=format:"%h  %ad  %s" --date=short)
                  ```
                  
                  ## üìú Gi·∫•y Ph√©p
                  
                  D·ª± √°n n√†y ƒë∆∞·ª£c c·∫•p ph√©p theo [Gi·∫•y ph√©p GPL-3.0](LICENSE).
                  
                  ---
                  
                  <p align="center">
                    Made with ‚ù§Ô∏è by <a href="https://github.com/${{ env.AUTHOR_NAME }}">${{ env.AUTHOR_NAME }}</a>
                  </p>
                  EOF

            - name: Commit changes
              if: env.CHANGED == 'true'
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
                  git add "${{ env.FILTER_FILE }}" README.md
                  git commit -m "chore(auto-update): v${{ env.FULL_VERSION }}" -m "C·∫≠p nh·∫≠t t·ª± ƒë·ªông:
                  - Rules: ${{ env.RULE_COUNT }}
                  - Domains: ${{ env.UNIQUE_DOMAINS }}
                  - Checksum: ${{ env.CHECKSUM }}"
                  git pull --rebase
                  git push
