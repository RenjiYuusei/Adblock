name: Update Yuusei Filter

on:
    push:
        paths:
            - 'Yuusei.txt'
    schedule:
        - cron: '0 0,12 * * *' # Ch·∫°y 2 l·∫ßn m·ªói ng√†y l√∫c 00:00 v√† 12:00 UTC
    workflow_dispatch:
        inputs:
            force_update:
                description: 'C·∫≠p nh·∫≠t b·∫Øt bu·ªôc ngay c·∫£ khi kh√¥ng c√≥ thay ƒë·ªïi'
                required: false
                type: boolean
                default: false

env:
    FILTER_FILE: Yuusei.txt
    MIN_RULES: 10
    TIMEZONE: 'Asia/Ho_Chi_Minh'
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
    update-filter:
        runs-on: ubuntu-latest
        permissions:
            contents: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup environment
              id: setup
              run: |
                  sudo ln -sf /usr/share/zoneinfo/${{ env.TIMEZONE }} /etc/localtime
                  {
                    echo "DATE=$(date +'%d-%m-%Y')"
                    echo "TIME=$(date +'%H:%M:%S')"
                    echo "YEAR=$(date +'%Y')"
                    echo "REPO_NAME=${GITHUB_REPOSITORY#*/}"
                    echo "AUTHOR_NAME=${GITHUB_REPOSITORY%/*}"
                    echo "FULL_VERSION=$(date +'%Y.%m.%d')"
                  } >> $GITHUB_ENV

            - name: Remove duplicate rules
              id: deduplicate
              run: |
                  # T·∫°o file t·∫°m ƒë·ªÉ l∆∞u rules kh√¥ng tr√πng l·∫∑p
                  temp_file=$(mktemp)

                  # Gi·ªØ l·∫°i header (c√°c d√≤ng b·∫Øt ƒë·∫ßu b·∫±ng !)
                  grep "^!" "${{ env.FILTER_FILE }}" > "$temp_file"

                  # L·ªçc v√† s·∫Øp x·∫øp c√°c rules kh√¥ng tr√πng l·∫∑p
                  grep -v "^!" "${{ env.FILTER_FILE }}" | sort -u >> "$temp_file"

                  # ƒê·∫øm s·ªë rules tr√πng l·∫∑p ƒë√£ x√≥a
                  original_count=$(grep -cv "^!" "${{ env.FILTER_FILE }}")
                  new_count=$(grep -cv "^!" "$temp_file")
                  removed_count=$((original_count - new_count))

                  echo "ƒê√£ x√≥a $removed_count rules tr√πng l·∫∑p"
                  echo "REMOVED_DUPLICATES=$removed_count" >> $GITHUB_ENV

                  # Thay th·∫ø file g·ªëc b·∫±ng file ƒë√£ l·ªçc
                  mv "$temp_file" "${{ env.FILTER_FILE }}"

            - name: Validate filter file
              id: validate
              run: |
                  # H√†m ghi log l·ªói
                  log_error() {
                    echo "::error::$1"
                    exit 1
                  }

                  # Ki·ªÉm tra file t·ªìn t·∫°i
                  [ -f "${{ env.FILTER_FILE }}" ] || log_error "Kh√¥ng t√¨m th·∫•y file filter!"

                  # Ki·ªÉm tra k√≠ch th∆∞·ªõc file
                  FILE_SIZE=$(stat -f%z "${{ env.FILTER_FILE }}" 2>/dev/null || stat -c%s "${{ env.FILTER_FILE }}")
                  [ "$FILE_SIZE" -ge 100 ] || log_error "File filter qu√° nh·ªè!"

                  # X√°c th·ª±c c√°c header b·∫Øt bu·ªôc
                  required_headers=("! Title:" "! Version:" "! Last modified:" "! Homepage:" "! License:")
                  for header in "${required_headers[@]}"; do
                    grep -q "^$header" "${{ env.FILTER_FILE }}" || log_error "Thi·∫øu header b·∫Øt bu·ªôc: $header"
                  done

                  # ƒê·∫øm v√† x√°c th·ª±c s·ªë l∆∞·ª£ng rules
                  RULE_COUNT=$(grep -c "^[^!]" "${{ env.FILTER_FILE }}" || true)
                  [ "$RULE_COUNT" -ge "${{ env.MIN_RULES }}" ] || log_error "Kh√¥ng ƒë·ªß rules (t·ªëi thi·ªÉu: ${{ env.MIN_RULES }})!"
                  echo "RULE_COUNT=$RULE_COUNT" >> $GITHUB_ENV

                  # Ki·ªÉm tra l·ªói c√∫ ph√°p
                  SYNTAX_ERRORS=$(grep -n "^[^!#@|]*[^a-zA-Z0-9.*?^$@#|=/,&_-]" "${{ env.FILTER_FILE }}" || true)
                  if [ -n "$SYNTAX_ERRORS" ]; then
                    echo "::warning::Ph√°t hi·ªán l·ªói c√∫ ph√°p ti·ªÅm ·∫©n:"
                    echo "$SYNTAX_ERRORS"
                  fi

            - name: Update filter metadata
              id: update
              run: |
                  # T·∫°o file t·∫°m
                  temp_file=$(mktemp)
                  cp "${{ env.FILTER_FILE }}" "${FILTER_FILE}.bak"

                  # C·∫≠p nh·∫≠t metadata
                  sed -E "s/^! Version:.*/! Version: ${{ env.FULL_VERSION }}/;\
                         s/^! Last modified:.*/! Last modified: ${{ env.DATE }} ${{ env.TIME }}/;\
                         s/^! Updated by:.*/! Updated by: GitHub Actions/" \
                  "${{ env.FILTER_FILE }}" > "$temp_file"

                  # T√≠nh to√°n v√† c·∫≠p nh·∫≠t checksum
                  CHECKSUM=$(sha256sum "$temp_file" | cut -d' ' -f1)
                  sed "s/^! Checksum:.*/! Checksum: $CHECKSUM/" "$temp_file" > "${{ env.FILTER_FILE }}"

                  # ƒê·∫øm c√°c lo·∫°i rules
                  {
                    echo "NETWORK_RULES=$(grep -c "^||" "${{ env.FILTER_FILE }}" || true)"
                    echo "COSMETIC_RULES=$(grep -c "##" "${{ env.FILTER_FILE }}" || true)"
                    echo "WHITELIST_RULES=$(grep -c "^@@" "${{ env.FILTER_FILE }}" || true)"
                    echo "IMPORTANT_RULES=$(grep -c "important" "${{ env.FILTER_FILE }}" || true)"
                    echo "REDIRECT_RULES=$(grep -c "redirect=" "${{ env.FILTER_FILE }}" || true)"
                  } >> $GITHUB_ENV

                  # Ki·ªÉm tra thay ƒë·ªïi
                  if [[ "${{ github.event.inputs.force_update }}" == "true" ]] || ! git diff --quiet "${{ env.FILTER_FILE }}"; then
                    echo "CHANGED=true" >> $GITHUB_ENV
                  else
                    echo "CHANGED=false" >> $GITHUB_ENV
                  fi

                  rm "$temp_file"

            - name: Generate badges and README
              if: env.CHANGED == 'true'
              run: |
                  mkdir -p .github/badges

                  # H√†m t·∫°o badges
                  generate_badge() {
                    local label=$1 message=$2 color=$3 style=${4:-flat-square}
                    local filename=".github/badges/${label// /_}.json"
                    echo "{ \"schemaVersion\": 1, \"label\": \"$label\", \"message\": \"$message\", \"color\": \"$color\", \"style\": \"$style\" }" > "$filename"
                  }

                  # T·∫°o t·∫•t c·∫£ badges
                  generate_badge "version" "${{ env.FULL_VERSION }}" "blue"
                  generate_badge "rules" "${{ env.RULE_COUNT }}" "brightgreen"
                  generate_badge "updated" "${{ env.DATE }}" "success"
                  generate_badge "network rules" "${{ env.NETWORK_RULES }}" "informational"
                  generate_badge "cosmetic rules" "${{ env.COSMETIC_RULES }}" "yellow"
                  generate_badge "whitelist rules" "${{ env.WHITELIST_RULES }}" "orange"
                  generate_badge "important rules" "${{ env.IMPORTANT_RULES }}" "red"
                  generate_badge "redirect rules" "${{ env.REDIRECT_RULES }}" "purple"
                  generate_badge "removed duplicates" "${{ env.REMOVED_DUPLICATES }}" "red"
                  generate_badge "ublock" "C√†i ƒë·∫∑t cho uBlock Origin" "1a73e8" "for-the-badge"
                  generate_badge "adguard" "C√†i ƒë·∫∑t cho AdGuard" "67b279" "for-the-badge"

                  # T·∫°o README
                  cat > README.md << 'EOF'
                  <div align="center">

                  # üõ°Ô∏è Yuusei Filter List

                  _B·ªô l·ªçc qu·∫£ng c√°o n√¢ng cao v·ªõi c·∫≠p nh·∫≠t t·ª± ƒë·ªông hai l·∫ßn m·ªói ng√†y_

                  [![Version](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/.github/badges/version.json)](https://github.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/Yuusei.txt)
                  [![Rules](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/.github/badges/rules.json)](https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/Yuusei.txt)
                  [![Updated](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/.github/badges/updated.json)](https://github.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/commits/main)
                  [![Removed Duplicates](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/.github/badges/removed_duplicates.json)](https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/Yuusei.txt)
                  [![License](https://img.shields.io/badge/license-GPL--3.0-orange?style=flat-square)](LICENSE)
                  [![Stars](https://img.shields.io/github/stars/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}?style=flat-square&color=yellow)](https://github.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/stargazers)

                  </div>

                  ## üì¶ C√†i ƒë·∫∑t nhanh

                  <div align="center">

                  [![Install for uBlock Origin](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/.github/badges/ublock.json)](https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/Yuusei.txt)
                  [![Install for AdGuard](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/.github/badges/adguard.json)](https://subscribe.adblockplus.org/?location=https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/Yuusei.txt)

                  </div>

                  ### üîó URL b·ªô l·ªçc
                  ```
                  https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/Yuusei.txt
                  ```

                  ## üìä Th·ªëng k√™ chi ti·∫øt

                  <div align="center">

                  | Danh m·ª•c | S·ªë l∆∞·ª£ng | Tr·∫°ng th√°i |
                  |----------|--------|---------|
                  | T·ªïng s·ªë Rules | ${{ env.RULE_COUNT }} | ![Rules](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/.github/badges/rules.json) |
                  | Rules m·∫°ng | ${{ env.NETWORK_RULES }} | ![Network](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/.github/badges/network_rules.json) |
                  | Rules giao di·ªán | ${{ env.COSMETIC_RULES }} | ![Cosmetic](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/.github/badges/cosmetic_rules.json) |
                  | Rules whitelist | ${{ env.WHITELIST_RULES }} | ![Whitelist](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/.github/badges/whitelist_rules.json) |
                  | Rules important | ${{ env.IMPORTANT_RULES }} | ![Important](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/.github/badges/important_rules.json) |
                  | Rules redirect | ${{ env.REDIRECT_RULES }} | ![Redirect](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/.github/badges/redirect_rules.json) |
                  | Rules tr√πng ƒë√£ x√≥a | ${{ env.REMOVED_DUPLICATES }} | ![Removed Duplicates](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/.github/badges/removed_duplicates.json) |

                  </div>

                  ## üõ°Ô∏è T√≠nh nƒÉng ch√≠nh

                  ### üö´ Ch·∫∑n qu·∫£ng c√°o to√†n di·ªán
                  - Ch·∫∑n ho√†n to√†n qu·∫£ng c√°o tr√™n c√°c trang web
                  - Lo·∫°i b·ªè n·ªôi dung ƒë∆∞·ª£c t√†i tr·ª£ v√† qu·∫£ng c√°o
                  - B·∫£o v·ªá kh·ªèi pop-up v√† overlay
                  - V∆∞·ª£t qua ch·ªëng ch·∫∑n qu·∫£ng c√°o
                  - Ch·∫∑n qu·∫£ng c√°o tr√™n YouTube v√† c√°c n·ªÅn t·∫£ng video

                  ### üîí B·∫£o v·ªá quy·ªÅn ri√™ng t∆∞ t·ªëi ƒëa
                  - Ch·∫∑n script v√† pixel theo d√µi
                  - NgƒÉn ch·∫∑n browser fingerprinting
                  - B·∫£o v·ªá kh·ªèi theo d√µi analytics
                  - Ch·∫∑n c√°c tr√¨nh theo d√µi c·ªßa b√™n th·ª© 3
                  - B·∫£o v·ªá kh·ªèi malware v√† phishing

                  ### ‚ö° T·ªëi ∆∞u hi·ªáu su·∫•t cao
                  - TƒÉng t·ªëc ƒë·ªô t·∫£i trang ƒë√°ng k·ªÉ
                  - Gi·∫£m s·ª≠ d·ª•ng bƒÉng th√¥ng v√† b·ªô nh·ªõ
                  - Tr·∫£i nghi·ªám duy·ªát web m∆∞·ª£t m√†
                  - T·ªëi ∆∞u s·ª≠ d·ª•ng t√†i nguy√™n
                  - Gi·∫£m th·ªùi gian t·∫£i trang

                  ### üîÑ B·∫£o tr√¨ chuy√™n nghi·ªáp
                  - C·∫≠p nh·∫≠t t·ª± ƒë·ªông 2 l·∫ßn m·ªói ng√†y
                  - Ki·ªÉm so√°t ch·∫•t l∆∞·ª£ng nghi√™m ng·∫∑t
                  - Gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ nhanh ch√≥ng
                  - T·ªëi ∆∞u h√≥a th∆∞·ªùng xuy√™n
                  - H·ªó tr·ª£ k·ªπ thu·∫≠t 24/7

                  ## ü§ù ƒê√≥ng g√≥p v√† ph√°t tri·ªÉn

                  <div align="center">

                  [![Report Bug](https://img.shields.io/badge/B√°o%20l·ªói-G·ª≠i%20Issue-red?style=for-the-badge)](https://github.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/issues/new?assignees=&labels=bug&template=bug_report.md)
                  [![Request Feature](https://img.shields.io/badge/Y√™u%20c·∫ßu%20t√≠nh%20nƒÉng-G·ª≠i%20√Ω%20t∆∞·ªüng-blue?style=for-the-badge)](https://github.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/issues/new?assignees=&labels=enhancement&template=feature_request.md)

                  </div>

                  ## üìú Gi·∫•y ph√©p

                  D·ª± √°n n√†y ƒë∆∞·ª£c c·∫•p ph√©p theo [GNU GPL v3.0](LICENSE)

                  ## ‚≠ê H·ªó tr·ª£ d·ª± √°n

                  N·∫øu b·∫°n th·∫•y d·ª± √°n n√†y h·ªØu √≠ch:
                  - Star repository ‚≠ê
                  - Chia s·∫ª v·ªõi m·ªçi ng∆∞·ªùi üîÑ
                  - B√°o c√°o l·ªói v√† g√≥p √Ω üêõ
                  - ƒê√≥ng g√≥p c·∫£i ti·∫øn m√£ ngu·ªìn üõ†Ô∏è
                  - Tham gia ph√°t tri·ªÉn d·ª± √°n üë•

                  ---

                  <div align="center">

                  ƒê∆∞·ª£c t·∫°o v·ªõi ‚ù§Ô∏è b·ªüi [Yuusei](https://github.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}) | ¬© ${{ env.YEAR }}

                  <sub>C·∫≠p nh·∫≠t t·ª± ƒë·ªông b·ªüi GitHub Actions</sub>

                  _C·∫≠p nh·∫≠t l·∫ßn cu·ªëi: ${{ env.DATE }} ${{ env.TIME }} (${{ env.TIMEZONE }})_

                  </div>
                  EOF

            - name: Commit changes
              if: env.CHANGED == 'true'
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
                  git add "${{ env.FILTER_FILE }}" README.md .github/badges || true
                  git commit -m "üîÑ C·∫≠p nh·∫≠t t·ª± ƒë·ªông (Phi√™n b·∫£n: ${{ env.FULL_VERSION }}, ƒê√£ x√≥a ${{ env.REMOVED_DUPLICATES }} rules tr√πng l·∫∑p)"
                  git push
