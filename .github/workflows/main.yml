name: Update Yuusei Filter and Create Release

on:
  push:
    paths:
      - 'Yuusei.txt'
  schedule:
    - cron: '0 0 * * *'  # Run daily at 00:00 UTC
  workflow_dispatch:

jobs:
  update-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper versioning

      - name: Set up timezone and datetime
        run: |
          sudo ln -sf /usr/share/zoneinfo/Asia/Ho_Chi_Minh /etc/localtime
          echo "DATE=$(date +"%d-%m-%Y")" >> $GITHUB_ENV
          echo "TIME=$(date +"%H:%M:%S")" >> $GITHUB_ENV
          echo "RELEASE_DATE=$(date +"%Y.%m.%d")" >> $GITHUB_ENV

      - name: Update Yuusei.txt metadata
        id: update_file
        run: |
          # Create temporary file
          temp_file=$(mktemp)
          
          # Update Version and Last modified
          sed -E "
            s/^! Version:.*/! Version: ${{ env.DATE }}/
            s/^! Last modified:.*/! Last modified: ${{ env.DATE }} ${{ env.TIME }}/
          " Yuusei.txt > "$temp_file"
          
          # Calculate new checksum
          CHECKSUM=$(sha256sum "$temp_file" | cut -d' ' -f1)
          sed "s/^! Checksum:.*/! Checksum: $CHECKSUM/" "$temp_file" > Yuusei.txt
          
          # Get rule count
          RULE_COUNT=$(grep -c "^[^!]" Yuusei.txt || true)
          echo "RULE_COUNT=$RULE_COUNT" >> $GITHUB_ENV
          
          # Check for changes
          if git diff --quiet Yuusei.txt; then
            echo "CHANGED=false" >> $GITHUB_ENV
            echo "No changes detected in Yuusei.txt"
          else
            echo "CHANGED=true" >> $GITHUB_ENV
            echo "Changes detected in Yuusei.txt"
          fi
          
          rm "$temp_file"

      - name: Update README.md
        if: env.CHANGED == 'true'
        run: |
          cat > README.md << EOF
          # Yuusei Filter List
          
          ## About
          A carefully curated filter list for Adblock Plus, uBlock Origin, and other compatible ad blockers.
          
          ## Statistics
          - Version: ${{ env.DATE }}
          - Last Updated: ${{ env.DATE }} ${{ env.TIME }}
          - Rule Count: ${{ env.RULE_COUNT }}
          
          ## Usage
          Subscribe to this filter list by adding the following URL to your ad blocker:
          \`\`\`
          https://raw.githubusercontent.com/${{ github.repository }}/main/Yuusei.txt
          \`\`\`
          
          ## Features
          - Blocks common advertisements
          - Removes tracking elements
          - Improves page load times
          - Regular updates
          
          ## License
          This filter list is licensed under [GPL-3.0](https://spdx.org/licenses/GPL-3.0-only.html)
          
          ## Updates
          - Updates automatically every day at 07:00 (Vietnam time)
          - Manual updates when necessary
          - Version history available in [Releases](https://github.com/${{ github.repository }}/releases)
          
          ## Support
          If you encounter any issues or have suggestions, please [open an issue](https://github.com/${{ github.repository }}/issues).
          EOF

      - name: Commit and push changes
        if: env.CHANGED == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add Yuusei.txt README.md
          git commit -m "Auto update Yuusei.txt (Version: ${{ env.DATE }})"
          git push

      - name: Create GitHub Release
        if: env.CHANGED == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Generate changelog
          CHANGELOG=$(git log -1 --pretty=format:%b)
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="- Updated filter list version to ${{ env.DATE }}
          - Updated rules count to ${{ env.RULE_COUNT }}
          - Recalculated checksum"
          fi
          
          # Create release
          gh release create "v${{ env.RELEASE_DATE }}" \
            --title "Yuusei Filter v${{ env.RELEASE_DATE }}" \
            --notes "$CHANGELOG" \
            --target ${{ github.sha }} \
            Yuusei.txt

      - name: Cleanup old releases
        if: env.CHANGED == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Keep only the latest 10 releases
          releases=$(gh release list -L 100 | tail -n +11 | cut -f1)
          for release in $releases; do
            gh release delete $release --yes
          done
