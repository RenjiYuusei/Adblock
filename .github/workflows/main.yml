name: Update Yuusei Filter

on:
    push:
        paths:
            - 'Yuusei.txt'
    schedule:
    - cron: '0 0 * * *' # Ch·∫°y v√†o 0h h√†ng ng√†y (12h ƒë√™m theo GMT+7)
    workflow_dispatch:
        inputs:
            force_update:
                description: 'C·∫≠p nh·∫≠t b·∫Øt bu·ªôc ngay c·∫£ khi kh√¥ng c√≥ thay ƒë·ªïi'
                required: false
                type: boolean
                default: false

env:
    FILTER_FILE: Yuusei.txt
    MIN_RULES: 10
    MIN_CONTRIBUTIONS: 5 # Gi·∫£m s·ªë ƒë√≥ng g√≥p t·ªëi thi·ªÉu ƒë·ªÉ khuy·∫øn kh√≠ch ng∆∞·ªùi ƒë√≥ng g√≥p m·ªõi
    TIMEZONE: 'Asia/Ho_Chi_Minh'
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    CACHE_VERSION: 'v1' # Th√™m version cho cache

jobs:
    update-filter:
        runs-on: ubuntu-latest
        permissions:
            contents: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: ~/.cache
                  key: ${{ runner.os }}-${{ env.CACHE_VERSION }}-${{ hashFiles('**/Yuusei.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-${{ env.CACHE_VERSION }}-

            - name: Setup environment
              id: setup
              run: |
                  sudo ln -sf /usr/share/zoneinfo/${{ env.TIMEZONE }} /etc/localtime
                  {
                    echo "DATE=$(date +'%d-%m-%Y')"
                    echo "TIME=$(date +'%H:%M:%S')"
                    echo "YEAR=$(date +'%Y')"
                    echo "REPO_NAME=${GITHUB_REPOSITORY#*/}"
                    echo "AUTHOR_NAME=${GITHUB_REPOSITORY%/*}"
                    echo "FULL_VERSION=$(date +'%Y.%m.%d.%H%M')" # Th√™m gi·ªù ph√∫t v√†o version
                  } >> $GITHUB_ENV

            - name: Get contributors info
              id: contributors
              run: |
                  # Th√™m retry logic
                  max_retries=3
                  retry_count=0
                  while [ $retry_count -lt $max_retries ]; do
                    if contributors=$(gh api graphql -f query='
                      query($owner:String!, $name:String!) {
                        repository(owner:$owner, name:$name) {
                          collaborators(first:100) {
                            nodes {
                              login
                              name
                              avatarUrl
                              url
                              contributionsCollection {
                                totalCommitContributions
                                totalIssueContributions
                                totalPullRequestContributions
                                totalPullRequestReviewContributions
                              }
                            }
                          }
                        }
                      }' -f owner="${GITHUB_REPOSITORY%/*}" -f name="${GITHUB_REPOSITORY#*/}" --jq '.data.repository.collaborators.nodes'); then
                      break
                    fi
                    retry_count=$((retry_count + 1))
                    sleep 5
                  done

                  echo "CONTRIBUTORS<<EOF" >> $GITHUB_ENV
                  echo "$contributors" | jq -r --arg min_contributions "${{ env.MIN_CONTRIBUTIONS }}" '
                    .[] | 
                    select(.contributionsCollection.totalCommitContributions + 
                          .contributionsCollection.totalIssueContributions + 
                          .contributionsCollection.totalPullRequestContributions >= ($min_contributions | tonumber)) | 
                    "- <img src=\"\(.avatarUrl)&s=50\" width=\"50\" height=\"50\" style=\"border-radius: 50%; vertical-align: middle; margin-right: 5px;\" alt=\"\(.login)\"> **[\(.login)](\(.url))** - \(.contributionsCollection.totalCommitContributions + .contributionsCollection.totalIssueContributions + .contributionsCollection.totalPullRequestContributions) ƒë√≥ng g√≥p"
                  ' >> $GITHUB_ENV
                  echo "EOF" >> $GITHUB_ENV
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Validate and analyze filter file
              id: validate
              run: |
                  log_error() {
                    echo "::error::$1"
                    exit 1
                  }

                  # Ki·ªÉm tra file v√† t·∫°o backup
                  [ -f "${{ env.FILTER_FILE }}" ] || log_error "Kh√¥ng t√¨m th·∫•y file filter!"
                  cp "${{ env.FILTER_FILE }}" "${FILTER_FILE}.bak"

                  FILE_SIZE=$(stat -f%z "${{ env.FILTER_FILE }}" 2>/dev/null || stat -c%s "${{ env.FILTER_FILE }}")
                  [ "$FILE_SIZE" -ge 100 ] || log_error "File filter qu√° nh·ªè!"

                  # Ki·ªÉm tra headers
                  required_headers=("! Title:" "! Version:" "! Last modified:" "! Homepage:" "! License:")
                  for header in "${required_headers[@]}"; do
                    grep -q "^$header" "${{ env.FILTER_FILE }}" || log_error "Thi·∫øu header b·∫Øt bu·ªôc: $header"
                  done

                  # Ph√¢n t√≠ch rules
                  RULE_COUNT=$(grep -v '^!' "${FILTER_FILE}" | wc -l)
                  [ "$RULE_COUNT" -ge "${{ env.MIN_RULES }}" ] || log_error "Kh√¥ng ƒë·ªß rules (t·ªëi thi·ªÉu: ${{ env.MIN_RULES }})!"

                  # Th·ªëng k√™ chi ti·∫øt
                  {
                    echo "RULE_COUNT=$RULE_COUNT"
                    echo "NETWORK_RULES=$(grep -cE "^\|\||^0\.0\.0\.0" "${FILTER_FILE}" || true)"
                    echo "COSMETIC_RULES=$(grep -cE "##|#\@#" "${FILTER_FILE}" || true)"
                    echo "WHITELIST_RULES=$(grep -c "^@@" "${FILTER_FILE}" || true)"
                    echo "COMMENT_COUNT=$(grep -c "^!" "${FILTER_FILE}" || true)"
                    echo "HOSTS_RULES=$(grep -c "^0\.0\.0\.0" "${FILTER_FILE}" || true)"
                    echo "UNIQUE_DOMAINS=$(grep -E "^\|\||^0\.0\.0\.0" "${FILTER_FILE}" | cut -d'|' -f3 | cut -d'^' -f1 | sort -u | wc -l || true)"
                  } >> $GITHUB_ENV

                  # Ki·ªÉm tra c√∫ ph√°p
                  echo "::group::Ki·ªÉm tra c√∫ ph√°p"
                  grep -v "^!" "${FILTER_FILE}" | grep -n "[^a-zA-Z0-9.*?^$@#|=/,&_-]" || true
                  echo "::endgroup::"

                  # X√≥a d√≤ng tr·ªëng
                  sed -i '/^$/d' "${FILTER_FILE}"
                  # Chu·∫©n h√≥a kho·∫£ng tr·∫Øng
                  sed -i '/^[^!]/s/[[:space:]]\+/ /g' "${FILTER_FILE}"

            - name: Update filter metadata
              id: update
              run: |
                  temp_file=$(mktemp)

                  # C·∫≠p nh·∫≠t metadata v·ªõi th√¥ng tin chi ti·∫øt h∆°n
                  sed -E "
                    s/^! Version:.*/! Version: ${{ env.FULL_VERSION }}/;
                    s/^! Last modified:.*/! Last modified: ${{ env.DATE }} ${{ env.TIME }} (GMT+7)/;
                    s/^! Updated by:.*/! Updated by: GitHub Actions/;
                    s/^! Total rules:.*/! Total rules: ${{ env.RULE_COUNT }}/;
                    s/^! Unique domains:.*/! Unique domains: ${{ env.UNIQUE_DOMAINS }}/
                  " "${{ env.FILTER_FILE }}" > "$temp_file"

                  # T√≠nh to√°n v√† th√™m checksum m·ªõi
                  CHECKSUM=$(sha256sum "$temp_file" | cut -d' ' -f1)
                  sed "s/^! Checksum:.*/! Checksum: $CHECKSUM/" "$temp_file" > "${{ env.FILTER_FILE }}"

                  # Ki·ªÉm tra thay ƒë·ªïi
                  if [[ "${{ github.event.inputs.force_update }}" == "true" ]] || ! git diff --quiet "${{ env.FILTER_FILE }}"; then
                    echo "CHANGED=true" >> $GITHUB_ENV
                    echo "CHECKSUM=$CHECKSUM" >> $GITHUB_ENV
                  else
                    echo "CHANGED=false" >> $GITHUB_ENV
                  fi

                  rm "$temp_file"

            - name: Generate README
              if: env.CHANGED == 'true'
              run: |
                  cat > README.md << EOF
                  <div align="center">
                    <h1>üõ°Ô∏è Yuusei Filter List</h1>
                    <p><em>B·∫£o v·ªá tr·∫£i nghi·ªám web c·ªßa b·∫°n kh·ªèi qu·∫£ng c√°o kh√¥ng mong mu·ªën</em></p>
                    <p>
                      <a href="https://github.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/releases">
                        <img src="https://img.shields.io/badge/version-${{ env.FULL_VERSION }}-blue?style=for-the-badge" alt="Version">
                      </a>
                      <a href="https://github.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/blob/main/Yuusei.txt">
                        <img src="https://img.shields.io/badge/rules-${{ env.RULE_COUNT }}-brightgreen?style=for-the-badge" alt="Rules">
                      </a>
                      <a href="https://github.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/stargazers">
                        <img src="https://img.shields.io/github/stars/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}?style=for-the-badge" alt="Stars">
                      </a>
                    </p>
                  </div>

                  ## üìä Th·ªëng k√™ chi ti·∫øt

                  | Lo·∫°i | S·ªë l∆∞·ª£ng | T·ª∑ l·ªá |
                  |------|-----------|-------|
                  | T·ªïng s·ªë Rules | ${{ env.RULE_COUNT }} | 100% |
                  | Rules M·∫°ng | ${{ env.NETWORK_RULES }} | $(( ${{ env.NETWORK_RULES }} * 100 / ${{ env.RULE_COUNT }} ))% |
                  | Rules Giao Di·ªán | ${{ env.COSMETIC_RULES }} | $(( ${{ env.COSMETIC_RULES }} * 100 / ${{ env.RULE_COUNT }} ))% |
                  | Rules Whitelist | ${{ env.WHITELIST_RULES }} | $(( ${{ env.WHITELIST_RULES }} * 100 / ${{ env.RULE_COUNT }} ))% |
                  | Rules Host File | ${{ env.HOSTS_RULES }} | $(( ${{ env.HOSTS_RULES }} * 100 / ${{ env.RULE_COUNT }} ))% |
                  | Ghi ch√∫ & Comments | ${{ env.COMMENT_COUNT }} | $(( ${{ env.COMMENT_COUNT }} * 100 / ${{ env.RULE_COUNT }} ))% |
                  | T√™n mi·ªÅn ƒë·ªôc nh·∫•t | ${{ env.UNIQUE_DOMAINS }} | - |

                  ## üöÄ H∆∞·ªõng d·∫´n c√†i ƒë·∫∑t

                  <details>
                  <summary>üîç D√†nh cho uBlock Origin</summary>

                  ### C√°ch 1: C√†i ƒë·∫∑t nhanh (Khuy·∫øn ngh·ªã)
                  1. Click v√†o link: [C√†i ƒë·∫∑t cho uBlock Origin](https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/Yuusei.txt)
                  2. Click "Proceed" ho·∫∑c "Ti·∫øp t·ª•c" trong h·ªôp tho·∫°i x√°c nh·∫≠n

                  ### C√°ch 2: C√†i ƒë·∫∑t th·ªß c√¥ng
                  1. M·ªü Dashboard uBlock Origin (click v√†o bi·ªÉu t∆∞·ª£ng uBlock > M·ªü b·∫£ng ƒëi·ªÅu khi·ªÉn)
                  2. Chuy·ªÉn ƒë·∫øn tab "Filter lists"
                  3. Cu·ªôn xu·ªëng cu·ªëi trang
                  4. M·ªü r·ªông ph·∫ßn "Custom"
                  5. D√°n link sau v√†o √¥ tr·ªëng:
                  \`\`\`
                  https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/Yuusei.txt
                  \`\`\`
                  6. Click "Apply changes"
                  </details>

                  <details>
                  <summary>üõ°Ô∏è D√†nh cho AdGuard</summary>

                  ### C√°ch 1: C√†i ƒë·∫∑t nhanh (Khuy·∫øn ngh·ªã)
                  1. Click v√†o link: [C√†i ƒë·∫∑t cho AdGuard](https://subscribe.adblockplus.org/?location=https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/Yuusei.txt)
                  2. Ch·ªçn "Subscribe" trong h·ªôp tho·∫°i x√°c nh·∫≠n

                  ### C√°ch 2: C√†i ƒë·∫∑t th·ªß c√¥ng
                  1. M·ªü c√†i ƒë·∫∑t AdGuard
                  2. Ch·ªçn "Filters" > "Custom"
                  3. Click "Add custom filter"
                  4. D√°n link sau:
                  \`\`\`
                  https://raw.githubusercontent.com/${{ env.AUTHOR_NAME }}/${{ env.REPO_NAME }}/main/Yuusei.txt
                  \`\`\`
                  5. Click "Next" v√† "Subscribe"
                  </details>

                  ## üë• Ng∆∞·ªùi ƒë√≥ng g√≥p

                  ### Nh·ªØng ng∆∞·ªùi ƒë√≥ng g√≥p ch√≠nh
                  ${{ env.CONTRIBUTORS }}

                  ## üìù Th√¥ng tin c·∫≠p nh·∫≠t

                  - **C·∫≠p nh·∫≠t l·∫ßn cu·ªëi**: ${{ env.DATE }} ${{ env.TIME }} (GMT+7)
                  - **Phi√™n b·∫£n**: ${{ env.FULL_VERSION }}
                  - **Checksum**: ${{ env.CHECKSUM }}
                  - **T·ªïng s·ªë rules**: ${{ env.RULE_COUNT }}
                  - **T√™n mi·ªÅn ƒë·ªôc nh·∫•t**: ${{ env.UNIQUE_DOMAINS }}

                  ### Changelog g·∫ßn ƒë√¢y
                  \`\`\`
                  $(git log -5 --pretty=format:"- %h %s (%cr)" --abbrev-commit)
                  \`\`\`

                  ## ‚≠ê T√≠nh nƒÉng n·ªïi b·∫≠t

                  - ‚ú® **T·ªëi ∆∞u cho ng∆∞·ªùi Vi·ªát**: Rules ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·∫∑c bi·ªát cho c√°c website Vi·ªát Nam
                  - üöÄ **Hi·ªáu su·∫•t cao**: Rules ƒë∆∞·ª£c t·ªëi ∆∞u h√≥a ƒë·ªÉ gi·∫£m thi·ªÉu t√°c ƒë·ªông ƒë·∫øn t·ªëc ƒë·ªô duy·ªát web
                  - üîÑ **C·∫≠p nh·∫≠t th∆∞·ªùng xuy√™n**: B·ªô l·ªçc ƒë∆∞·ª£c c·∫≠p nh·∫≠t t·ª± ƒë·ªông 2 l·∫ßn/ng√†y
                  - üõ°Ô∏è **An to√†n & B·∫£o m·∫≠t**: M√£ ngu·ªìn m·ªü, minh b·∫°ch v√† kh√¥ng ch·ª©a m√£ ƒë·ªôc
                  - üì± **ƒêa n·ªÅn t·∫£ng**: Ho·∫°t ƒë·ªông tr√™n m·ªçi tr√¨nh duy·ªát v√† thi·∫øt b·ªã
                  - üåê **H·ªó tr·ª£ ƒëa d·∫°ng**: Ch·∫∑n qu·∫£ng c√°o, theo d√µi v√† c√°c th√†nh ph·∫ßn kh√¥ng mong mu·ªën

                  ## üìú Gi·∫•y ph√©p

                  D·ª± √°n n√†y ƒë∆∞·ª£c ph√¢n ph·ªëi d∆∞·ªõi [Gi·∫•y ph√©p GPL-3.0](LICENSE)

                  ---
                  <div align="center">
                    <sub>Made with ‚ù§Ô∏è by <a href="https://github.com/${{ env.AUTHOR_NAME }}">${{ env.AUTHOR_NAME }}</a></sub>
                    <br>
                    <sub>Last updated: ${{ env.DATE }} ${{ env.TIME }} (GMT+7)</sub>
                  </div>
                  EOF

            - name: Commit changes
              if: env.CHANGED == 'true'
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
                  git add "${{ env.FILTER_FILE }}" README.md
                  git commit -m "üîÑ C·∫≠p nh·∫≠t t·ª± ƒë·ªông (v${{ env.FULL_VERSION }})

                  - Rules: ${{ env.RULE_COUNT }}
                  - Domains: ${{ env.UNIQUE_DOMAINS }}
                  - Checksum: ${{ env.CHECKSUM }}"
                  git pull origin main --rebase
                  git push
